{"version":3,"file":"component---src-templates-products-page-template-tsx-63a1ecff77caa84f2099.js","mappings":"wLAcA,MAAMA,EACJC,IAEA,MAAM,aACJC,EADI,KAEJC,EAFI,SAGJC,EAHI,SAIJC,EAJI,QAKJC,EALI,aAMJC,GACEN,EAAMO,YAEJC,GAASC,EAAAA,EAAAA,IAAiB,CAC9BC,QAAS,CACPC,QAASV,EAAaW,OAAS,EAAIX,EAAa,QAAKY,KAsEzD,OACEC,EAAAA,EAAAA,MAAAA,EAAAA,SAAAA,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,IAAD,CAAKC,SAAUlB,EAAMmB,KAAMC,SA9BD,MAC5B,MAAMC,EAAkBrB,EAAMO,YAAYe,aAE1C,IAAIC,EAAQ,YACRC,EACF,iCAEAnB,EAAQoB,KAAK,MACb,oBACAnB,EAAamB,KAAK,MAClB,YACAvB,EAAKuB,KAAK,MAEZ,GAAIJ,EAAiB,CACnB,MAAMK,GAASC,EAAAA,EAAAA,IAAuBN,GAElCK,EAAOE,OACTL,EAAQG,EAAOE,KACfJ,GAAe,iBAAmBD,EAErC,CAED,MAAO,CACLA,QACAC,cAFF,EAQuCK,MACrCb,EAAAA,EAAAA,KAACc,EAAAA,EAAD,CAAQX,KAAMnB,EAAMmB,KAApBJ,UACEC,EAAAA,EAAAA,KAACe,EAAAA,GAAD,CACEZ,KAAMnB,EAAMmB,KACZa,SAAUxB,EAAOwB,SACjBC,WAAYzB,EAAOyB,WACnBC,cAAe1B,EAAO0B,cACtBxB,QAAS,CACPR,OACAG,UACAC,eACAF,WACAD,YAEFgC,cAAe3B,EAAOE,QACtB0B,aAtDc1B,IACpB2B,QAAQC,IAAI,cAAe5B,GAC3BF,EAAO+B,eAAe,IACjB7B,EACHP,SAAUO,EAAQP,eAAYU,EAC9BT,SAAUM,EAAQN,eAAYS,GAHhCL,EAqDMgC,YAAa,CACX,eACA,oBACA,oBAEFC,aAzFcC,IACpB,IAAIC,EAEAC,EAEJ,OAAQF,GACN,IAAK,eAYL,QACEC,EAAU,QACVC,GAAU,QAVZ,IAAK,oBACHD,EAAU,QACVC,GAAU,EACV,MACF,IAAK,mBACHD,EAAU,QACVC,GAAU,EAOdpC,EAAOqC,gBAAgB,CACrBF,UACAC,WAFFpC,QA2CF,EA8BF,UACER,IAGAgB,EAAAA,EAAAA,KAAC8B,EAAAA,GAAD,CAAA/B,UACEC,EAAAA,EAAAA,KAACjB,EAAD,IAA0BC,K","sources":["webpack://jaen-template-shopify/./src/templates/ProductsPageTemplate.tsx"],"sourcesContent":["import {SEO} from '@jaenjs/jaen'\nimport {\n  getCollectionStructure,\n  ProductsPageContext,\n  ProductsPageData,\n  SearchProvider,\n  useProductSearch\n} from '@snek-at/gatsby-theme-shopify'\nimport {PageProps} from 'gatsby'\nimport React from 'react'\nimport {Layout} from '../components/Layout'\nimport {ProductsTemplate} from '../components/templates'\nimport {ProductsTemplateProps} from '../components/templates/ProductsTemplate/ProductsTemplate'\n\nconst ProductsPageTemplate = (\n  props: PageProps<ProductsPageData, ProductsPageContext>\n) => {\n  const {\n    implicitTags,\n    tags,\n    maxPrice,\n    minPrice,\n    vendors,\n    productTypes\n  } = props.pageContext\n\n  const search = useProductSearch({\n    filters: {\n      mainTag: implicitTags.length > 0 ? implicitTags[0] : undefined\n    }\n  })\n\n  const onSortChange = (sort: string) => {\n    let sortKey\n\n    let reverse\n\n    switch (sort) {\n      case 'Alphabetisch':\n        sortKey = 'TITLE'\n        reverse = false\n        break\n      case 'Preis aufsteigend':\n        sortKey = 'PRICE'\n        reverse = false\n        break\n      case 'Preis absteigend':\n        sortKey = 'PRICE'\n        reverse = true\n        break\n      default:\n        sortKey = 'TITLE'\n        reverse = false\n    }\n\n    search.onChangeOptions({\n      sortKey,\n      reverse\n    })\n  }\n\n  const updateFilter = (filters: Partial<ProductsTemplateProps['filters']>) => {\n    console.log('set filters', filters)\n    search.onChangeFilter({\n      ...filters,\n      maxPrice: filters.maxPrice || undefined,\n      minPrice: filters.minPrice || undefined\n    })\n  }\n\n  const buildProductsPageMeta = () => {\n    const collectionTitle = props.pageContext.collectionId\n\n    let title = 'Sortiment'\n    let description =\n      'Unser Sortiment' +\n      ' | Hersteller: ' +\n      vendors.join(', ') +\n      ' | Produkttypen: ' +\n      productTypes.join(', ') +\n      ' | Tags: ' +\n      tags.join(', ')\n\n    if (collectionTitle) {\n      const struct = getCollectionStructure(collectionTitle)\n\n      if (struct.name) {\n        title = struct.name\n        description += ' | Kategorie: ' + title\n      }\n    }\n\n    return {\n      title,\n      description\n    }\n  }\n\n  return (\n    <>\n      <SEO pagePath={props.path} pageMeta={buildProductsPageMeta()} />\n      <Layout path={props.path}>\n        <ProductsTemplate\n          path={props.path}\n          products={search.products}\n          isFetching={search.isFetching}\n          fetchNextPage={search.fetchNextPage}\n          filters={{\n            tags,\n            vendors,\n            productTypes,\n            minPrice,\n            maxPrice\n          }}\n          activeFilters={search.filters}\n          updateFilter={updateFilter}\n          sortOptions={[\n            'Alphabetisch',\n            'Preis aufsteigend',\n            'Preis absteigend'\n          ]}\n          onSortChange={onSortChange}\n        />\n      </Layout>\n    </>\n  )\n}\n\nexport default (\n  props: JSX.IntrinsicAttributes &\n    PageProps<ProductsPageData, ProductsPageContext, unknown, object>\n) => (\n  <SearchProvider>\n    <ProductsPageTemplate {...props} />\n  </SearchProvider>\n)\n"],"names":["ProductsPageTemplate","props","implicitTags","tags","maxPrice","minPrice","vendors","productTypes","pageContext","search","useProductSearch","filters","mainTag","length","undefined","_jsxs","children","_jsx","SEO","pagePath","path","pageMeta","collectionTitle","collectionId","title","description","join","struct","getCollectionStructure","name","buildProductsPageMeta","Layout","ProductsTemplate","products","isFetching","fetchNextPage","activeFilters","updateFilter","console","log","onChangeFilter","sortOptions","onSortChange","sort","sortKey","reverse","onChangeOptions","SearchProvider"],"sourceRoot":""}