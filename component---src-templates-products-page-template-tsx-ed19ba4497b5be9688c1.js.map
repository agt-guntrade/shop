{"version":3,"file":"component---src-templates-products-page-template-tsx-ed19ba4497b5be9688c1.js","mappings":"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","sources":["webpack://jaen-template-shopify/./node_modules/@react-icons/all-files/fa/FaFilter.js","webpack://jaen-template-shopify/./node_modules/@react-icons/all-files/fa/FaHome.js","webpack://jaen-template-shopify/./node_modules/@react-icons/all-files/fa/FaSort.js","webpack://jaen-template-shopify/./src/components/ContainerLayout.tsx","webpack://jaen-template-shopify/./src/components/molecules/BreadcrumbsBanner/BreadcrumbsBanner.tsx","webpack://jaen-template-shopify/./src/components/molecules/ProductGrid/ProductGrid.tsx","webpack://jaen-template-shopify/./src/components/templates/ProductsTemplate/Filter.tsx","webpack://jaen-template-shopify/./src/components/templates/ProductsTemplate/ProductsTemplate.tsx","webpack://jaen-template-shopify/./src/templates/ProductsPageTemplate.tsx"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FaFilter = function FaFilter(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 512 512\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"\n      }\n    }]\n  })(props);\n};","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FaHome = function FaHome(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 576 512\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M280.37 148.26L96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47L488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"\n      }\n    }]\n  })(props);\n};","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon;\n\nmodule.exports.FaSort = function FaSort(props) {\n  return GenIcon({\n    \"tag\": \"svg\",\n    \"attr\": {\n      \"viewBox\": \"0 0 320 512\"\n    },\n    \"child\": [{\n      \"tag\": \"path\",\n      \"attr\": {\n        \"d\": \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"\n      }\n    }]\n  })(props);\n};","import {Box, Container, useColorModeValue} from '@chakra-ui/react'\n\nimport React from 'react'\n\nexport const ContainerLayout: React.FC = ({children}) => {\n  return (\n    <>\n      <Container\n        as=\"section\"\n        maxW=\"8xl\"\n        pt=\"6\"\n        id=\"featuredproducts\"\n        bg={useColorModeValue('white', 'gray.700')}\n        borderWidth=\"1px\"\n        mt={{base: 4, md: 12}}\n        mb={{base: 8, md: 24}}\n        px={4}\n        py={4}\n        borderRadius=\"lg\">\n        <Box>{children}</Box>\n      </Container>\n    </>\n  )\n}\n","import {ChevronRightIcon} from '@chakra-ui/icons'\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n  Heading,\n  Icon,\n  Text\n} from '@chakra-ui/react'\nimport {FaHome} from '@react-icons/all-files/fa/FaHome'\nimport {Link as GatsbyLink} from 'gatsby'\nimport {StaticImage} from 'gatsby-plugin-image'\nimport React from 'react'\n\nimport {GCImage} from '../../../common/GCImage'\n\nexport interface BannerLayoutProps {\n  title: string\n  path: string\n}\n\nexport const BreadcrumbsBanner = ({title, path}: BannerLayoutProps) => {\n  return (\n    <Box position={'relative'} color=\"white\">\n      <GCImage\n        gimg={\n          <StaticImage\n            src=\"https://i.imgur.com/8zG2Ymd.jpeg\"\n            alt=\"Banner with title and breadcrumbs\"\n            imgStyle={{\n              width: '100%',\n              height: '300px',\n              objectFit: 'cover'\n            }}\n          />\n        }\n      />\n\n      <Flex\n        position={'absolute'}\n        top=\"5\"\n        w=\"100%\"\n        justifyContent={'center'}\n        alignItems={'center'}>\n        <Box w=\"8xl\">\n          <Breadcrumbs path={path} />\n          <Heading size=\"2xl\" my=\"8\">\n            {title}\n          </Heading>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nexport const Breadcrumbs = (props: {path: string}) => {\n  const pathParts = props.path.split('/').filter(Boolean)\n  const pathLength = pathParts.length\n\n  const breadcrumbs = pathParts.map((item, index) => {\n    const isLast = index === pathLength - 1\n    const isExeption = item === 'collections' || isLast\n\n    switch (item) {\n      case 'collections':\n        item = 'Kategorien'\n        break\n      case 'products':\n        item = 'Produkte'\n        break\n      case 'shopping-cart':\n        item = 'Merkliste'\n        break\n      case 'privacy':\n        item = 'Datenschutz'\n        break\n      case 'contact':\n        item = 'Kontakt'\n        break\n    }\n\n    let capitalizedItem = item.charAt(0).toUpperCase() + item.slice(1)\n\n    return (\n      <BreadcrumbItem key={item}>\n        {isExeption ? (\n          <Text>{capitalizedItem}</Text>\n        ) : (\n          <BreadcrumbLink\n            as={GatsbyLink}\n            to={`/${pathParts.slice(0, index + 1).join('/')}`}>\n            {capitalizedItem}\n          </BreadcrumbLink>\n        )}\n      </BreadcrumbItem>\n    )\n  })\n\n  return (\n    <Breadcrumb\n      spacing=\"8px\"\n      separator={<ChevronRightIcon color=\"gray.500\" />}\n      my={4}>\n      <BreadcrumbItem>\n        <BreadcrumbLink as={GatsbyLink} to=\"/\">\n          <Icon as={FaHome} />\n        </BreadcrumbLink>\n      </BreadcrumbItem>\n      {breadcrumbs}\n    </Breadcrumb>\n  )\n}\n","import {\n  Box,\n  Heading,\n  SimpleGrid,\n  SimpleGridProps,\n  useBreakpointValue\n} from '@chakra-ui/react'\nimport {ShopifyProduct} from '@snek-at/gatsby-theme-shopify'\nimport React from 'react'\n\nimport {BulletIcon} from '../../../common/assets/icons'\nimport {gridPadBoxes} from '../../../common/utils'\nimport {ProductCard} from '../ProductCard'\n\nexport interface ProductGridProps extends SimpleGridProps {\n  heading?: string\n  products: ShopifyProduct[]\n  prefixPath?: string\n}\n\nexport const ProductGrid = ({\n  heading,\n  products,\n  prefixPath,\n  ...gridProps\n}: ProductGridProps) => {\n  const emptyBoxes = gridPadBoxes(products)\n\n  const v = gridProps.columns\n    ? useBreakpointValue(gridProps.columns as any)\n    : 0 || 0\n\n  return (\n    <>\n      {heading && (\n        <Box textAlign=\"center\" my=\"10\">\n          <Heading size=\"2xl\">{heading}</Heading>\n          <BulletIcon\n            color=\"agt.yellow\"\n            w=\"unset\"\n            fontSize=\"xl\"\n            mt=\"5\"\n            mb=\"10\"\n          />\n        </Box>\n      )}\n\n      <SimpleGrid {...gridProps}>\n        {products.map((item, index) => {\n          return (\n            <ProductCard\n              prefixPath={prefixPath}\n              product={item}\n              key={index}\n              left={0 === (index + 1) % v}\n              borderline\n            />\n          )\n        })}\n        {emptyBoxes}\n      </SimpleGrid>\n    </>\n  )\n}\n","import React from 'react'\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  Flex,\n  Icon,\n  RangeSlider,\n  RangeSliderFilledTrack,\n  RangeSliderThumb,\n  RangeSliderTrack,\n  Select,\n  Spacer,\n  Stack,\n  StackProps,\n  Text,\n  useColorModeValue,\n  VStack\n} from '@chakra-ui/react'\n\nimport {FaFilter} from '@react-icons/all-files/fa/FaFilter'\nimport {FaSort} from '@react-icons/all-files/fa/FaSort'\n\n// tag builder => input tag output type:content\n\nexport const Header = (props: {\n  title: string\n  path: string\n  sortOptions: Array<string>\n  onSortChange: (option: string) => void\n  isMobile?: boolean\n  onMobileFilterClick?: () => void\n}) => {\n  return (\n    <>\n      {/* <Breadcrumbs path={props.path} />\n        <Heading size=\"2xl\">{props.title}</Heading> */}\n      <Box\n        my=\"2\"\n        position={'sticky'}\n        top=\"0\"\n        alignSelf={'flex-start'}\n        zIndex=\"1\"\n        bg={useColorModeValue('white', 'gray.700')}>\n        <Flex>\n          {props.isMobile ? (\n            <Button\n              variant=\"unstyled\"\n              leftIcon={<Icon as={FaFilter} />}\n              onClick={props.onMobileFilterClick}>\n              Filter\n            </Button>\n          ) : (\n            <Button\n              leftIcon={<Icon as={FaFilter} />}\n              variant=\"unstyled\"\n              cursor={'default'}\n              _focus={{boxShadow: 'none'}}>\n              Filter\n            </Button>\n          )}\n\n          <Spacer />\n          <Box>\n            <Select\n              placeholder=\"Sortieren\"\n              variant={'unstyled'}\n              my=\"2\"\n              icon={<Icon as={FaSort} mb=\"1\" />}\n              onChange={e => props.onSortChange(e.target.value)}>\n              {props.sortOptions.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </Box>\n        </Flex>\n        <Divider />\n      </Box>\n    </>\n  )\n}\n\nconst PriceRangeFilter = (props: {\n  minPrice: number\n  maxPrice: number\n  activeMinPrice?: number\n  activeMaxPrice?: number\n  onPriceChange: (min: number, max: number) => void\n}) => {\n  const defaultValue: [number, number] = [\n    props.activeMinPrice || props.minPrice,\n    props.activeMaxPrice || props.maxPrice\n  ]\n\n  const [value, setValue] = React.useState<[number, number]>(defaultValue)\n\n  const handlePriceChange = (value: [number, number]) => {\n    setValue(value)\n  }\n\n  return (\n    <Box>\n      <Text fontWeight={'bold'}>\n        {`Preisklasse (${value[0]} - ${value[1]}€)`}\n      </Text>\n\n      <Box px=\"4\">\n        <RangeSlider\n          colorScheme={'agt.yellowScheme'}\n          min={props.minPrice}\n          max={props.maxPrice}\n          defaultValue={defaultValue}\n          value={value}\n          onChange={handlePriceChange}\n          onChangeEnd={value => props.onPriceChange(value[0], value[1])}>\n          <RangeSliderTrack>\n            <RangeSliderFilledTrack />\n          </RangeSliderTrack>\n          <RangeSliderThumb boxSize={6} index={0} />\n          <RangeSliderThumb boxSize={6} index={1} />\n        </RangeSlider>\n      </Box>\n    </Box>\n  )\n}\n\ninterface CheckboxFilterProps {\n  label: string\n  values: Array<{\n    label: string\n    value: string\n  }>\n  activeValues: Array<string>\n  onChange: (values: Array<string>) => void\n  height?: StackProps['height']\n}\n\nconst CheckboxFilterBox = ({\n  label,\n  values,\n  activeValues,\n  onChange,\n  height = '44'\n}: CheckboxFilterProps) => {\n  if (values.length === 0) {\n    return null\n  }\n\n  return (\n    <Stack spacing={1}>\n      <Text fontWeight={'semibold'} pl={1}>\n        {label}\n      </Text>\n      <Stack spacing={2} h={height} overflowY=\"scroll\">\n        {values.map(v => {\n          const isActive = activeValues.includes(v.value)\n\n          return (\n            <Checkbox\n              overflow={'visible'}\n              pl={1}\n              key={v.value}\n              isChecked={isActive}\n              onChange={() =>\n                onChange(\n                  isActive\n                    ? activeValues.filter(t => t !== v.value)\n                    : [...activeValues, v.value]\n                )\n              }>\n              {v.label}\n            </Checkbox>\n          )\n        })}\n      </Stack>\n    </Stack>\n  )\n}\n\ninterface FilterProps {\n  allTags: Array<string> // [\"category:test\",...]\n  activeTags: Array<string>\n  allVendors: Array<string>\n  activeVendors: Array<string>\n  allProductTypes: Array<string>\n  activeProductTypes: Array<string>\n  onActiveTagsChange: (tags: FilterProps['activeTags']) => void\n  onActiveVendorsChange: (vendors: FilterProps['activeVendors']) => void\n  onActiveProductTypesChange: (\n    productTypes: FilterProps['activeProductTypes']\n  ) => void\n  priceFilter?: React.ComponentProps<typeof PriceRangeFilter>\n}\n\nexport const Filter = (props: FilterProps) => {\n  const [activeTags, setActiveTags] = React.useState(props.activeTags)\n\n  const {Kategorie: category, ...groupedFilter} = React.useMemo(() => {\n    const grouped: {\n      [group: string]: Array<{\n        tag: string\n        label: string\n      }>\n    } = {}\n\n    for (const tag of Object.values(props.allTags)) {\n      const [group, ...tagParts] = tag.split(':')\n\n      const label = tagParts[tagParts.length - 1]\n\n      grouped[group] = grouped[group] || []\n      grouped[group].push({\n        tag,\n        label\n      })\n    }\n\n    return grouped\n  }, [props.allTags])\n\n  const handleActiveTabsChange = (tags: string[]) => {\n    setActiveTags(tags)\n\n    props.onActiveTagsChange(tags)\n  }\n\n  return (\n    <VStack pr=\"4\" spacing={4} divider={<Divider />} align=\"stretch\">\n      {category && (\n        <CheckboxFilterBox\n          label=\"Kategorie\"\n          values={category.map(c => ({\n            label: c.label,\n            value: c.tag\n          }))}\n          activeValues={activeTags}\n          onChange={handleActiveTabsChange}\n        />\n      )}\n\n      <CheckboxFilterBox\n        label=\"Hersteller\"\n        values={props.allVendors.map(v => ({\n          label: v,\n          value: v\n        }))}\n        activeValues={props.activeVendors}\n        onChange={props.onActiveVendorsChange}\n        height={'24'}\n      />\n\n      <CheckboxFilterBox\n        label=\"Art\"\n        values={props.allProductTypes.map(v => ({\n          label: v,\n          value: v\n        }))}\n        activeValues={props.activeProductTypes}\n        onChange={props.onActiveProductTypesChange}\n        height={'14'}\n      />\n\n      {props.priceFilter && <PriceRangeFilter {...props.priceFilter} />}\n\n      {Object.entries(groupedFilter).map(([tagType, values]) => (\n        <CheckboxFilterBox\n          label={tagType}\n          values={values.map(c => ({\n            label: c.label,\n            value: c.tag\n          }))}\n          activeValues={activeTags}\n          onChange={handleActiveTabsChange}\n          height={'20'}\n        />\n      ))}\n    </VStack>\n  )\n}\n","import {\n  Box,\n  Button,\n  Center,\n  Divider,\n  Drawer,\n  DrawerContent,\n  Flex,\n  Heading,\n  Icon,\n  Select,\n  Spacer,\n  Spinner,\n  useColorModeValue,\n  useDisclosure\n} from '@chakra-ui/react'\nimport {FaFilter} from '@react-icons/all-files/fa/FaFilter'\nimport {FaSort} from '@react-icons/all-files/fa/FaSort'\nimport {\n  ProductsPageContext,\n  ShopifyProduct\n} from '@snek-at/gatsby-theme-shopify'\nimport React from 'react'\nimport {ContainerLayout} from '../../ContainerLayout'\nimport {BreadcrumbsBanner} from '../../molecules/BreadcrumbsBanner'\nimport {ProductGrid} from '../../molecules/ProductGrid'\nimport {Filter} from './Filter'\n\nexport interface ProductsTemplateProps {\n  path: string\n  products: ShopifyProduct[]\n  filters: {\n    tags: ProductsPageContext['tags']\n    vendors: ProductsPageContext['vendors']\n    productTypes: ProductsPageContext['productTypes']\n    minPrice: ProductsPageContext['minPrice']\n    maxPrice: ProductsPageContext['maxPrice']\n  }\n  activeFilters: Partial<ProductsTemplateProps['filters']>\n  isFetching: boolean\n  fetchNextPage: () => void\n  updateFilter: (filter: ProductsTemplateProps['activeFilters']) => void\n  sortOptions: string[]\n  onSortChange: (sort: string) => void\n}\n\nexport const ProductsTemplate = (props: ProductsTemplateProps) => {\n  const mobile = useDisclosure()\n\n  const gridRef = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    const handleScroll = () => {\n      if (gridRef.current) {\n        const yOfDivEnd = gridRef.current.getBoundingClientRect().bottom\n\n        const currentScroll = window.pageYOffset + window.innerHeight\n\n        console.log(yOfDivEnd, currentScroll)\n\n        if (yOfDivEnd < currentScroll) {\n          props.fetchNextPage()\n        }\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [props.fetchNextPage])\n\n  const updateTags = (tags: string[]) => {\n    props.updateFilter({\n      tags\n    })\n  }\n\n  const updateVendors = (vendors: string[]) => {\n    props.updateFilter({\n      vendors\n    })\n  }\n\n  const updateProductTypes = (productTypes: string[]) => {\n    props.updateFilter({\n      productTypes\n    })\n  }\n\n  const hasTagsFilter =\n    props.filters.tags.length > 0 ||\n    props.filters.vendors.length > 0 ||\n    props.filters.productTypes.length > 0\n\n  const hasPriceFilter = !!(\n    props.filters.minPrice !== null &&\n    props.filters.maxPrice !== null &&\n    props.filters.minPrice !== props.filters.maxPrice\n  )\n\n  const disableFilter = !hasTagsFilter && !hasPriceFilter\n\n  const filter = !disableFilter ? (\n    <Filter\n      activeTags={props.activeFilters.tags || []}\n      allTags={props.filters.tags}\n      activeVendors={props.activeFilters.vendors || []}\n      allVendors={props.filters.vendors}\n      activeProductTypes={props.activeFilters.productTypes || []}\n      allProductTypes={props.filters.productTypes}\n      onActiveTagsChange={updateTags}\n      onActiveVendorsChange={updateVendors}\n      onActiveProductTypesChange={updateProductTypes}\n      priceFilter={\n        hasPriceFilter\n          ? {\n              minPrice: props.filters.minPrice!,\n              maxPrice: props.filters.maxPrice!,\n              activeMinPrice: props.activeFilters.minPrice || undefined,\n              activeMaxPrice: props.activeFilters.maxPrice || undefined,\n              onPriceChange: (minPrice, maxPrice) =>\n                props.updateFilter({minPrice, maxPrice})\n            }\n          : undefined\n      }\n    />\n  ) : null\n\n  return (\n    <>\n      <BreadcrumbsBanner title=\"Produkte\" path={props.path} />\n      <ContainerLayout>\n        <Header\n          onMobileFilterClick={mobile.onToggle}\n          sortOptions={props.sortOptions}\n          onSortChange={props.onSortChange}\n          disableFilter={!hasTagsFilter && !hasPriceFilter}\n        />\n        <Flex>\n          {!disableFilter && (\n            <>\n              <Drawer\n                isOpen={mobile.isOpen}\n                onClose={mobile.onClose}\n                placement=\"left\"\n                blockScrollOnMount={false}>\n                <DrawerContent p=\"4\">\n                  <Heading as=\"h3\" mb=\"4\">\n                    Filter\n                  </Heading>\n                  {filter}\n                </DrawerContent>\n              </Drawer>\n              <Box\n                display={['none', 'none', 'none', 'block']}\n                w=\"30%\"\n                position={'sticky'}\n                top=\"12\"\n                alignSelf={'flex-start'}>\n                {filter}\n              </Box>\n            </>\n          )}\n\n          <Box w=\"100%\" ref={gridRef}>\n            <ProductGrid\n              products={props.products}\n              columns={{base: 2, sm: 2, md: 3, xl: 4}}\n              spacing=\"4\"\n            />\n            {props.isFetching && (\n              <Center w=\"100%\" h=\"xs\">\n                <Spinner\n                  thickness=\"4px\"\n                  speed=\"0.65s\"\n                  emptyColor=\"gray.200\"\n                  color=\"agt.blue\"\n                  size=\"xl\"\n                />\n              </Center>\n            )}\n          </Box>\n        </Flex>\n      </ContainerLayout>\n    </>\n  )\n}\n\nexport const Header = (props: {\n  sortOptions: Array<string>\n  onSortChange: (option: string) => void\n  onMobileFilterClick?: () => void\n  disableFilter?: boolean\n}) => {\n  return (\n    <>\n      <Box\n        my=\"2\"\n        position={'sticky'}\n        top=\"0\"\n        alignSelf={'flex-start'}\n        zIndex=\"2\"\n        bg={useColorModeValue('white', 'gray.700')}>\n        <Flex>\n          {!props.disableFilter && (\n            <>\n              <Button\n                display={['block', 'block', 'block', 'none']}\n                variant=\"unstyled\"\n                leftIcon={<Icon as={FaFilter} />}\n                onClick={props.onMobileFilterClick}>\n                Filter\n              </Button>\n              <Button\n                display={['none', 'none', 'none', 'block']}\n                leftIcon={<Icon as={FaFilter} />}\n                variant=\"unstyled\"\n                cursor={'default'}\n                _focus={{boxShadow: 'none'}}>\n                Filter\n              </Button>\n            </>\n          )}\n\n          <Spacer />\n          <Box>\n            <Select\n              placeholder=\"Sortieren\"\n              variant={'unstyled'}\n              my=\"2\"\n              icon={<Icon as={FaSort} mb=\"1\" />}\n              defaultValue={\n                props.sortOptions.length > 0 ? props.sortOptions[0] : []\n              }\n              onChange={e => props.onSortChange(e.target.value)}>\n              {props.sortOptions.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </Box>\n        </Flex>\n        <Divider />\n      </Box>\n    </>\n  )\n}\n","import {SEO} from '@jaenjs/jaen'\nimport {\n  getCollectionStructure,\n  ProductsPageContext,\n  ProductsPageData,\n  SearchProvider,\n  useProductSearch\n} from '@snek-at/gatsby-theme-shopify'\nimport {PageProps} from 'gatsby'\nimport React from 'react'\nimport {Layout} from '../components/Layout'\nimport {ProductsTemplate} from '../components/templates/ProductsTemplate'\nimport {ProductsTemplateProps} from '../components/templates/ProductsTemplate/ProductsTemplate'\n\nconst ProductsPageTemplate = (\n  props: PageProps<ProductsPageData, ProductsPageContext>\n) => {\n  const {\n    implicitTags,\n    tags,\n    maxPrice,\n    minPrice,\n    vendors,\n    productTypes\n  } = props.pageContext\n\n  const search = useProductSearch({\n    filters: {\n      mainTag: implicitTags.length > 0 ? implicitTags[0] : undefined\n    }\n  })\n\n  const onSortChange = (sort: string) => {\n    let sortKey\n\n    let reverse\n\n    switch (sort) {\n      case 'Alphabetisch':\n        sortKey = 'TITLE'\n        reverse = false\n        break\n      case 'Preis aufsteigend':\n        sortKey = 'PRICE'\n        reverse = false\n        break\n      case 'Preis absteigend':\n        sortKey = 'PRICE'\n        reverse = true\n        break\n      default:\n        sortKey = 'TITLE'\n        reverse = false\n    }\n\n    search.onChangeOptions({\n      sortKey,\n      reverse\n    })\n  }\n\n  const updateFilter = (filters: Partial<ProductsTemplateProps['filters']>) => {\n    console.log('set filters', filters)\n    search.onChangeFilter({\n      ...filters,\n      maxPrice: filters.maxPrice || undefined,\n      minPrice: filters.minPrice || undefined\n    })\n  }\n\n  const buildProductsPageMeta = () => {\n    const collectionTitle = props.pageContext.collectionId\n\n    let title = 'Sortiment'\n    let description =\n      'Unser Sortiment' +\n      ' | Hersteller: ' +\n      vendors.join(', ') +\n      ' | Produkttypen: ' +\n      productTypes.join(', ') +\n      ' | Tags: ' +\n      tags.join(', ')\n\n    if (collectionTitle) {\n      const struct = getCollectionStructure(collectionTitle)\n\n      if (struct.name) {\n        title = struct.name\n        description += ' | Kategorie: ' + title\n      }\n    }\n\n    return {\n      title,\n      description\n    }\n  }\n\n  return (\n    <>\n      <SEO pagePath={props.path} pageMeta={buildProductsPageMeta()} />\n      <Layout path={props.path}>\n        <ProductsTemplate\n          path={props.path}\n          products={search.products}\n          isFetching={search.isFetching}\n          fetchNextPage={search.fetchNextPage}\n          filters={{\n            tags,\n            vendors,\n            productTypes,\n            minPrice,\n            maxPrice\n          }}\n          activeFilters={search.filters}\n          updateFilter={updateFilter}\n          sortOptions={[\n            'Alphabetisch',\n            'Preis aufsteigend',\n            'Preis absteigend'\n          ]}\n          onSortChange={onSortChange}\n        />\n      </Layout>\n    </>\n  )\n}\n\nexport default (\n  props: JSX.IntrinsicAttributes &\n    PageProps<ProductsPageData, ProductsPageContext, unknown, object>\n) => (\n  <SearchProvider>\n    <ProductsPageTemplate {...props} />\n  </SearchProvider>\n)\n"],"names":["GenIcon","module","exports","props","ContainerLayout","children","_jsx","Container","as","maxW","pt","id","bg","useColorModeValue","borderWidth","mt","base","md","mb","px","py","borderRadius","Box","BreadcrumbsBanner","title","path","_jsxs","position","color","GCImage","gimg","StaticImage","src","alt","imgStyle","width","height","objectFit","Flex","top","w","justifyContent","alignItems","Breadcrumbs","Heading","size","my","pathParts","split","filter","Boolean","pathLength","length","breadcrumbs","map","item","index","isExeption","capitalizedItem","charAt","toUpperCase","slice","BreadcrumbItem","Text","BreadcrumbLink","GatsbyLink","to","join","Breadcrumb","spacing","separator","ChevronRightIcon","Icon","FaHome","ProductGrid","heading","products","prefixPath","gridProps","emptyBoxes","gridPadBoxes","v","columns","useBreakpointValue","textAlign","BulletIcon","fontSize","SimpleGrid","ProductCard","product","left","borderline","PriceRangeFilter","defaultValue","activeMinPrice","minPrice","activeMaxPrice","maxPrice","value","setValue","React","fontWeight","RangeSlider","colorScheme","min","max","onChange","onChangeEnd","onPriceChange","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","boxSize","CheckboxFilterBox","label","values","activeValues","Stack","pl","h","overflowY","isActive","includes","Checkbox","overflow","isChecked","t","Filter","activeTags","setActiveTags","Kategorie","category","groupedFilter","grouped","tag","Object","allTags","group","tagParts","push","handleActiveTabsChange","tags","onActiveTagsChange","VStack","pr","divider","Divider","align","c","allVendors","activeVendors","onActiveVendorsChange","allProductTypes","activeProductTypes","onActiveProductTypesChange","priceFilter","entries","tagType","ProductsTemplate","mobile","useDisclosure","gridRef","handleScroll","current","yOfDivEnd","getBoundingClientRect","bottom","currentScroll","window","pageYOffset","innerHeight","console","log","fetchNextPage","addEventListener","removeEventListener","hasTagsFilter","filters","vendors","productTypes","hasPriceFilter","disableFilter","activeFilters","updateFilter","undefined","Header","onMobileFilterClick","onToggle","sortOptions","onSortChange","Drawer","isOpen","onClose","placement","blockScrollOnMount","DrawerContent","p","display","alignSelf","ref","sm","xl","isFetching","Center","Spinner","thickness","speed","emptyColor","zIndex","Button","variant","leftIcon","FaFilter","onClick","cursor","_focus","boxShadow","Spacer","Select","placeholder","icon","FaSort","e","target","option","ProductsPageTemplate","implicitTags","pageContext","search","useProductSearch","mainTag","SEO","pagePath","pageMeta","collectionTitle","collectionId","description","struct","getCollectionStructure","name","buildProductsPageMeta","Layout","onChangeFilter","sort","sortKey","reverse","onChangeOptions","SearchProvider"],"sourceRoot":""}