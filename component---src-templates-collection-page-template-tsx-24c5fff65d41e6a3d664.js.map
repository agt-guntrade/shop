{"version":3,"file":"component---src-templates-collection-page-template-tsx-24c5fff65d41e6a3d664.js","mappings":"sLA4IA,UAjDEA,IAEA,MAAM,gBAACC,GAAmBD,EAAME,MAC1B,kBAACC,EAAD,sBAAoBC,GAAyBJ,EAAMK,YAqBzD,OACEC,EAAAA,EAAAA,MAAAA,EAAAA,SAAAA,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,IAAD,CAAKC,SAAUV,EAAMW,KAAMC,SArBC,MAC9B,MAAM,KAACC,IAAQC,EAAAA,EAAAA,IAAuBd,EAAMK,YAAYU,cAExD,GAAIZ,GAAqBU,EAAM,OAQ7B,MAAO,CACLG,MAAOH,EACPI,YARAd,EAAkBc,YAClB,uBACAb,EAAsBc,MAAMC,KAAIC,GAAKA,EAAEJ,QAAOK,KAAK,MACnD,wBACApB,EAAgBiB,MAAMC,KAAIC,GAAKA,EAAEJ,QAAOK,KAAK,MAK7CC,MAAK,UAAEnB,EAAkBmB,aAApB,aAAEC,EAAyBC,IAEnC,GAKsCC,MACrCjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAD,CAAQf,KAAMX,EAAMW,KAApBJ,UACEC,EAAAA,EAAAA,KAACmB,EAAAA,GAAD,CACEhB,KAAMX,EAAMW,KACZR,kBAAmBA,EACnByB,eAAgBxB,EAChBH,gBAAiBA,QARzB,C","sources":["webpack://jaen-template-shopify/./src/templates/CollectionPageTemplate.tsx"],"sourcesContent":["// import {graphql, PageProps} from 'gatsby'\n// import React from 'react'\n\n// import {SEO} from '@jaenjs/jaen'\n// import {\n//   CollectionPageData,\n//   ColllectionPageContext,\n//   getCollectionStructure\n// } from '@snek-at/gatsby-theme-shopify'\n// import {CollectionTemplate} from '../components/templates'\n// import {Layout} from '../components/Layout'\n\n// const CollectionPageTemplate = (\n//   props: PageProps<CollectionPageData, ColllectionPageContext>\n// ) => {\n//   const {shopifyCollection, subCollections, relatedProducts} = props.data\n\n//   const buildCollectionPageMeta = () => {\n//     const {name} = getCollectionStructure(shopifyCollection.title)\n\n//     if (name) {\n//       const description =\n//         shopifyCollection.description +\n//         ' | Unterkategorien: ' +\n//         subCollections.nodes.map(n => n.title).join(', ') +\n//         ' | Weitere Produkte: ' +\n//         relatedProducts.nodes.map(n => n.title).join(', ')\n\n//       return {\n//         title: name,\n//         description: description,\n//         image: shopifyCollection.image?.src\n//       }\n//     }\n//   }\n\n//   return (\n//     <>\n//       <SEO pagePath={props.path} pageMeta={buildCollectionPageMeta()} />\n//       <Layout path={props.path}>\n//         <CollectionTemplate\n//           path={props.path}\n//           shopifyCollection={shopifyCollection}\n//           subCollections={subCollections}\n//           relatedProducts={relatedProducts}\n//         />\n//       </Layout>\n//     </>\n//   )\n// }\n\n// export const query = graphql`\n//   query(\n//     $collectionId: String!\n//     $subCollectionIds: [String!]!\n//     $relatedProductIds: [String!]!\n//   ) {\n//     shopifyCollection(id: {eq: $collectionId}) {\n//       ...shopifyCollectionData\n//     }\n//     subCollections: allShopifyCollection(\n//       filter: {id: {in: $subCollectionIds}}\n//       sort: {fields: productsCount, order: DESC}\n//     ) {\n//       nodes {\n//         ...shopifyCollectionData\n//       }\n//     }\n//     relatedProducts: allShopifyProduct(filter: {id: {in: $relatedProductIds}}) {\n//       nodes {\n//         ...shopifyProductData\n//       }\n//     }\n//   }\n// `\n\n// export default CollectionPageTemplate\n\nimport {graphql, PageProps} from 'gatsby'\nimport React from 'react'\n\nimport {SEO} from '@jaenjs/jaen'\nimport {\n  CollectionPageData,\n  ColllectionPageContext,\n  getCollectionStructure\n} from '@snek-at/gatsby-theme-shopify'\nimport {Layout} from '../components/Layout'\nimport {CollectionTemplate} from '../components/templates'\n\nconst CollectionPageTemplate = (\n  props: PageProps<CollectionPageData, ColllectionPageContext>\n) => {\n  const {relatedProducts} = props.data\n  const {shopifyCollection, shopifySubCollections} = props.pageContext\n\n  const buildCollectionPageMeta = () => {\n    const {name} = getCollectionStructure(props.pageContext.collectionId)\n\n    if (shopifyCollection && name) {\n      const description =\n        shopifyCollection.description +\n        ' | Unterkategorien: ' +\n        shopifySubCollections.nodes.map(n => n.title).join(', ') +\n        ' | Weitere Produkte: ' +\n        relatedProducts.nodes.map(n => n.title).join(', ')\n\n      return {\n        title: name,\n        description: description,\n        image: shopifyCollection.image?.src\n      }\n    }\n  }\n\n  return (\n    <>\n      <SEO pagePath={props.path} pageMeta={buildCollectionPageMeta()} />\n      <Layout path={props.path}>\n        <CollectionTemplate\n          path={props.path}\n          shopifyCollection={shopifyCollection}\n          subCollections={shopifySubCollections}\n          relatedProducts={relatedProducts}\n        />\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query ($relatedProductIds: [String!]!) {\n    relatedProducts: allShopifyProduct(filter: {id: {in: $relatedProductIds}}) {\n      nodes {\n        ...shopifyProductData\n      }\n    }\n  }\n`\n\nexport default CollectionPageTemplate\n"],"names":["props","relatedProducts","data","shopifyCollection","shopifySubCollections","pageContext","_jsxs","children","_jsx","SEO","pagePath","path","pageMeta","name","getCollectionStructure","collectionId","title","description","nodes","map","n","join","image","_shopifyCollection$im","src","buildCollectionPageMeta","Layout","CollectionTemplate","subCollections"],"sourceRoot":""}